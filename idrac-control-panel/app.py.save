from flask import Flask, render_template, request, redirect, url_for, session, flash
import requests

app = Flask(__name__)
app.secret_key = 'afwajwfhiwaahfiwahfihakwfhakwfk'  # Change this to a strong secret key

# iDRAC details (update these with your iDRAC information)
IDRAC_URL = 'https://'  # Replace with your iDRAC URL
IDRAC_USER = 'admin'  # Replace with your iDRAC username
IDRAC_PASSWORD = 'password'  # Replace with your iDRAC password

# Simple login check (this would ideally be replaced with a real database check)
USER_CREDENTIALS = {'username': 'admin', 'password': 'password'}

# Function to interact with iDRAC (via Redfish API)
def idrac_request(action):
    url = f"{IDRAC_URL}/redfish/v1/Systems/System.Embedded.1"
    response = requests.post(url, auth=(IDRAC_USER, IDRAC_PASSWORD), json=action, verify=False)
    return response

@app.route('/', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        username = request.form['username']
        password = request.form['password']

        # Simple authentication check
        if username == USER_CREDENTIALS['username'] and password == USER_CREDENTIALS['password']:
            session['logged_in'] = True
            return redirect(url_for('dashboard'))

        flash('Invalid username or password', 'danger')
    
    return render_template('login.html')

@app.route('/dashboard', methods=['GET', 'POST'])
def dashboard():
    if not session.get('logged_in'):
        return redirect(url_for('login'))
    
    if request.method == 'POST':
        action = request.form['action']

        if action == 'start':
            response = idrac_request({"Action": "PowerOn"})
            flash('Server Started' if response.ok else 'Failed to Start Server', 'success' if response.ok else 'danger')
        elif action == 'stop':
            response = idrac_request({"Action": "PowerOff"})
            flash('Server Stopped' if response.ok else 'Failed to Stop Server', 'success' if response.ok else 'danger')
        elif action == 'restart':
            response = idrac_request({"Action": "PowerCycle"})
            flash('Server Restarted' if response.ok else 'Failed to Restart Server', 'success' if response.ok else 'danger')

    return render_template('dashboard.html')

@app.route('/logout')
def logout():
    session.pop('logged_in', None)
    return redirect(url_for('login'))

if __name__ == '__main__':
    app.run(debug=True, ssl_context='adhoc')  # SSL for secure login (self-signed cert for testing)
